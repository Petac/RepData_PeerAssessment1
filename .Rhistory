dim(flags)
View(flags)
class(flags)
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect<-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors<-flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors, mean)
flag_shapes<-flags[,19:23]
lapply(flag_shapes, range)
shape_mat<-sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals<-lapply(flags,unique)
unique_vals
sapply(unique_vals, length)
sapply(unique_vals, length)
sapply(unique_vals, unique)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
library(datasets)
data("iris")
?iris
head(iris)
tapply(iris$Sepal.Length, iris$Species, mean)
apply(iris, 1, mean)
apply(iris[,1:4], 1, mean)
?apply
apply(iris[,1:4], 2, mean)
apply(iris,2,mean)
data("mtcars")
?mtcars
head(mtcars)
tapply(mtcars$mgp, mtcars$cyl, mean)
sapply(split(mtcars$mpg,mtcars$cyl), mean)
sapply(mtcars,cyl, mean)
?with
lapply(mtcars, mean)
with(mtcars, tapply(mgp,cyl,mean))
with(mtcars, tapply(mpg,cyl,mean))
head(mtcars)
diff()
with(mtcars, tapply(hp,cyl, mean))
with(mtcars, tapply(hp,cyl$4, mean))
debug(ls)
n
ls
debug(ls)
ls
debug(ls)
ls
n
debug(ls)
ls
?ls
source('C:/Users/Bruger/PAC/Documents/Coursera/Programmingassignment2.R')
a<-matrix(5-8,2,2)
b<-makeCacheMatrix(a)
cacheSolve(b)
a<-matrix(3-6,2,2)
b<-makeCacheMatrix(a)
cacheSolve(b)
a<-matrix(5:8,2,2)
b<-makeCacheMatrix(a)
cacheSolve(b)
cacheSolve(b)
source('C:/Users/Bruger/PAC/Documents/test/ProgrammingAssignment2/cachematrix.R')
a<-matrix(5:8,2,2)
b<-makeCacheMatrix(a)
cacheSolve(b)
cacheSolve(b)
b$set(matrix(3:6,2,2))
cacheSolve(b)
cacheSolve(b)
source('C:/Users/Bruger/PAC/Documents/test/ProgrammingAssignment2/cachematrix.R')
?sha-1
library(digest)
a<-https://github.com/Petac/ProgrammingAssignment2.git
a<-"https://github.com/Petac/ProgrammingAssignment2.git"
sapply(a,digest,algo="sha1")
b<-"https://github.com/qnixon/ProgrammingAssignment2"
sapply(b,digest,algo="sha1")
source('C:/Users/Bruger/PAC/Documents/ProgrammingAssignment2/cachematrix.R')
a<-matrix(1:4,2,2)
b<-makeCacheMatrix(a)
cacheSolve(b)
cacheSolve(b)
b$set(matrix(5:8,2,2))
b<-makeCacheMatrix(a)
b$set(matrix(5:8,2,2))
cacheSolve(b)
cacheSolve(b)
source('~/.active-rstudio-document')
a<-matrix(1:4,2,2)
b<-makeCacheMatrix(a)
cacheSolve(b)
cacheSolve(b)
b$set(matrix(5:8,2,2))
cacheSolve(b)
cacheSolve(b)
?gl
library(swirl)
swirl()
head(cars)
with(cars, plot(speed,dist))
text(mean(cars$speed, max(cars$dist), "SWIRL ruels"))
text(mean(cars$speed), max(cars$dist), "SWIRL ruels")
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp~Income|region,data=state, c(4,1))
xyplot(Life.Exp~Income|region,data=state, layout=c(4,1))
xyplot(Life.Exp~Income|region,data=state, layout=c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy,data=mpg)
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month, data=airquality)
boxplot(Ozone~Month, data=airquality, xlab="Month", yulab="Ozone(ppb)", col.axis ="blue", col.lab="red")
boxplot(Ozone~Month, data=airquality, xlab="Month", ylab="Ozone(ppb)", col.axis ="blue", col.lab="red")
boxplot(Ozone~Month, data=airquality, xlab="Month", ylab="Ozone (ppb)", col.axis ="blue", col.lab="red")
title(main = "Ozone and Wind in New York City")
with(airquality,plot(Wind,Ozone))
title(main = "Ozone and Wind in New York City")
length(par)
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
with(airquality, plot(Wind,Ozone, type="n"))
plot(airquality$Wind, type="n", airquality$Ozone)
title(main="Wind and Ozone in NYC")
may<-subset(airquality, airquality$Month=5)
may<-subset(airquality, airquality$Month="5")
may<-subset(airquality, airquality$Month==5)
may<-subset(airquality, Month==5)
par()$col
points(may$Wind, may$Ozone, col="blue", pch=17)
notmay<-subset(airquality, Month!=5)
?pch
points(notmay$Wind, notmay$Ozone, col="red", pch=19)
points(notmay$Wind, notmay$Ozone, col="red", pch=8)
legend("topright", pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
abline(v=median(airquality$Wind), lty=2, lwt=2)
abline(v=median(airquality$Wind), lty=2, lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow=c(1,3), mar=c(4,4,2,1), oma=c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
library(swirl)
swirl
swirl()
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets=.~drv,method="loess")
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets=.~drv,method ="loess")
?qplot
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets=.~drv)
q<-qplot(mgp,aes(displ,hwy))
q<-ggplot(mgp,aes(displ,hwy))
q<-ggplot(mpg,aes(displ,hwy))
q<-ggplot(mpg,aes(displ,hwy) )
g<-ggplot(mpg, aes(displ,hwy) )
g
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth("lm")
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules")
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink",size=4,alpha=.5)
g+geom_point(aes(color=drv),size=4,alpha=.5)
g+geom_point(aes(color=drv))+labels(title="Swirl Rules!", x="Displacement", y="Hwy Mileage")
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!", x="Displacement", y="Hwy Mileage")
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement", y="Hwy Mileage")
g+geom_point(aes(color=drv),size=2,alpha,.5)+geom_smooth(size=4,lty=3,method="lm",SE=FALSE)
g+geom_point(aes(color=drv),size=2,alpha,.5)+geom_smooth(size=4,lty=3,method="lm",se=FALSE)
g+geom_point(aes(color=drv),size=2,alpha=.5)+geom_smooth(size=4,lty=3,method="lm",se=FALSE)
g+geom_point(aes(color=drv),size=2,alpha=1/2)+geom_smooth(size=4,lty=3,method="lm",se=FALSE)
g+geom_point(aes(color=drv),size=2,alpha=1/2)+geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g+geom_point(aes(color=drv))+theme_bw(base_family = "Times")
plot(myx,myy,type="l",ylim=c(-3,3))
g<-ggplot(testdat, aes(x=myx,y=myy))
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim(-3,3))
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g<-ggplot(mpg,aes(x=displ,y=hwy,color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl,margins = TRUE)
g+geom_point()+facet_grid(drv~cyl,margins = TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")
g+geom_point()+facet_grid(drv~cyl,margins = TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
str(diamonds)
qplot(price,data=diamonds)
range(diamonds$price)
qplot(price,data=diamonds,binwidth=18497/30)
brk
counts
qplot(price,data=diamonds,binwidth=18497/30,fill=fut)
qplot(price,data=diamonds,binwidth=18497/30,fill=cut)
qplot(price,data=diamonds,geom="density")
qplot(price,data=diamonds,geom="density",color=cut)
qplot(carat,price,data=diamonds)
qplot(carat,price,data=diamonds,shape=cut)
qplot(carat,price,data=diamonds,colors=cut)
qplot(carat,price,data=diamonds,color=cut)
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"),method="lm")
qplot(carat,price,data=diamonds,color=cut,geom=(c("point","smooth"),method="lm")
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"))
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"))+geom_smooth(method="lm")
qplot(carat,price,data=diamonds,color=cut)+geom_smooth(method="lm")
qplot(carat,price,data=diamonds,color=cut)+geom_smooth(method="lm")+facet=.~cut
qplot(carat,price,data=diamonds,color=cut,facet=.~cut)+geom_smooth(method="lm")
qplot(carat,price,data=diamonds,color=cut)+geom_smooth(method="lm")+facet(.~cut) =.~cut
qplot(carat,price,data=diamonds,color=cut, facet=.~cut)
qplot(carat,price,data=diamonds,color=cut, facets =.~cut)
qplot(carat,price,data=diamonds,color=cut, facets =.~cut)+geom_smooth(method="lm")
g<-ggplot(data=diamonds,aes(depth,price))
summary(g)
g+geom_point(alpha=1/3)
cutpoints<-quantile(diamonds$carat,seq(0,1,4),na.rm=TRUE)
cutpoints<-quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
?seq
cutpoints
diamonds$car2<-cutpoints
diamonds$car2<-cut(diamonds$carat,cutpoints)
g<-ggplot(data=diamonds,aes(depth,price))
g+geom_point(alpha=1/3,facet_grid(cut~car2))
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm",size=3,color="pink")
ggplot(data=diamonds,aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
0
library(nlme)
library(lattice)
xyplot(weight~Time | Diet, BodyWeight)
?lpoints
?text
library(datasets)
data("airquality")
library(lattice)
library(datasets)
data(airquality)
p<-xyplot(Ozone~Wind|factor(Month),data=airquality)
print(p)
?par
?splom
?trellis.par.set
library(ggplot2)
qplot(Wind, Ozone, data=airquality, facets=.~factor(Month))
airquality=transform(airquality,Month=factor(Month))
qplot(Wind, Ozone, data=airquality, facets=.~Month)
?geom
?geom_point
library(ggplot2movies)
library(ggplot2)
library(ggplot2)
library(ggplot2)
library(ggplot2movies)
library(movies)
clear
?clear
install.packages("lubridate")
library(lubridate)
library(swirl)
swirl()
exit
0
end
stop
stop()
end
library(swirl)
swirl()
2
swirl()
swirl()
library(swirl)
install_from_swirl("Getting_and_Cleaning_Data")
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package=lubridate)
this_day<-today
this_day<-today()
print(this_day)
year(this_day)
wday(this_day)
wday(this_day, label=TRUE)
this_moment<-now()
this_moment
second(this_moment)
my_date<-ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms(03:22:14)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours=8, minutes=34, seconds=55)
this_moment
this_moment<-update(this_moment, hours=8, minutes=34, seconds=55)
this_moment
nyc<-now("America/New_York")
nyc
depart<-nyc+days(2)
depart
depart
depart<-update(hours=17, minutes=34)
depart<-update(depart,hours=17, minutes=34)
depart
arrive<-depart+hours(15)+minutes(50)
?with_tz
arrive<-with_tz(arrive,tzone="Asia/Hong_Kong")
arrive
last_time<-mdy(June 17, 2008, tz="Singapore")
last_time<-mdy("June 17, 2008", tz="Singapore")
last_time
new_interval()
?new_interval
how_long<-new_interval(last_time,arrive)
as.period(how_long)
stopwatch()
setwd("C:/Users/Bruger/PAC/Documents/R/Reproducible research/PA1/GITHUB")
library(ggplot2)
library(dplyr)
library(knitr)
library(Hmisc)
library(plyr)
library(lubridate)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2: cars
summary(cars)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
pa1 <- read.csv("activity.csv")
pa2<-aggregate(pa1$steps,by=list(pa1$date),FUN=sum)
pa3<-aggregate(pa1$steps, by=list(pa1$interval), FUN=mean, na.rm=TRUE)
hist(pa2$x, main="Histogram of steps each day", xlab="No. of steps", col = "red")
# Chunk 3
mean(pa2$x, na.rm=TRUE)
median(pa2$x, na.rm=TRUE)
# Chunk 4
plot(pa3$Group.1,pa3$x, type="l", main="Daily activity pattern", xlab="Time", ylab="Steps")
pa3$Group.1[pa3$x==max(pa3$x)]
sum(is.na(pa1$steps))
pa1.i<-ddply(pa1, "interval", mutate, steps = impute(steps, mean))
pa2.i<-aggregate(pa1.i$steps,by=list(pa1.i$date),FUN=sum)
hist(pa2.i$x, main="Histogram of steps each day", xlab="No. of steps", col = "red")
mean(pa2.i$x)
median(pa2.i$x)
pa1.i$date<-strptime(pa1.i$date,"%Y-%m-%d")
pa1.i2<-mutate(pa1.i, day=ifelse(wday(date) %in% c(2:6),"Weekday","Weekend"))
pa1.i2$day<-as.factor(as.character(pa1.i2$day))
pa4<-aggregate(pa1.i2$steps, by=list(pa1.i2$interval,pa1.i2$day), FUN=mean)
qplot(Group.1,x,data=pa4, geom="line",facets = Group.2~., main="Daily activity pattern", xlab="Interval", ylab="Number of steps")
?ddplyr
ddplyr
?ddply
?knit2html
knit2html(PA1_template.Rmd)
knit2html("PA1_template.Rmd")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
pa1 <- read.csv("activity.csv")
pa2<-aggregate(pa1$steps,by=list(pa1$date),FUN=sum)
pa3<-aggregate(pa1$steps, by=list(pa1$interval), FUN=mean, na.rm=TRUE)
hist(pa2$x, main="Histogram of steps each day", xlab="No. of steps", col = "red")
# Chunk 3
mean(pa2$x, na.rm=TRUE)
median(pa2$x, na.rm=TRUE)
# Chunk 4
plot(pa3$Group.1,pa3$x, type="l", main="Daily activity pattern", xlab="Time", ylab="Steps")
pa3$Group.1[pa3$x==max(pa3$x)]
sum(is.na(pa1$steps))
pa1.i<-ddply(pa1, .(interval), transform, steps=ifelse(is.na(steps), mean=(steps, na.rm=TRUE), steps)
pa1.i<-ddply(pa1, .(interval), transform, steps=ifelse(is.na(steps), mean(steps, na.rm=TRUE), steps)
pa2.i<-aggregate(pa1.i$steps,by=list(pa1.i$date),FUN=sum)
View(pa1)
pa1.i<-ddply(pa1, .(interval), transform, steps=ifelse(is.na(steps), mean(steps, na.rm=TRUE), steps)
pa2.i<-aggregate(pa1.i$steps,by=list(pa1.i$date),FUN=sum)
pa1.i<-ddply(pa1, .(interval), transform, steps=ifelse(is.na(steps), mean(steps, na.rm=TRUE), steps)
)
pa2.i<-aggregate(pa1.i$steps,by=list(pa1.i$date),FUN=sum)
hist(pa2.i$x, main="Histogram of steps each day", xlab="No. of steps", col = "red")
mean(pa2.i$x)
median(pa2.i$x)
pa3<-aggregate(pa1$steps, by=list(pa1$interval), FUN=mean, na.rm=TRUE)
plot(pa3$Group.1,pa3$x, type="l", main="Daily activity pattern", xlab="Time", ylab="Steps")
pa1.i<-pa1
pa1.i$steps[is.na(pa1.i$steps)] <- pa3$x[match(pa1.i$interval,pa3$x)][is.na(pa1.i$steps)]
View(pa1.i)
View(pa3)
pa1.i<-pa1
pa1.i$steps[is.na(pa1.i$steps)] <- pa3$x[match(pa1.i$interval,pa3$Group.1)][is.na(pa1.i$steps)]
pa2.i<-aggregate(pa1.i$steps,by=list(pa1.i$date),FUN=sum)
hist(pa2.i$x, main="Histogram of steps each day", xlab="No. of steps", col = "red")
mean(pa2.i$x)
median(pa2.i$x)
```
View(pa1.i)
pa1.i2<-pa1.i
pa1.i2$day<-ifelse(wday(date) %in% c(2:6),"Weekday","Weekend"))
pa1.i2$day<-ifelse(wday(date) %in% c(2:6),"Weekday","Weekend")
pa1.i$date<-strptime(pa1.i$date,"%Y-%m-%d")
pa1.i2<-pa1.i
pa1.i2$day<-ifelse(wday(date) %in% c(2:6),"Weekday","Weekend")
pa1.i2$day<-ifelse(wday(pa1.i2$date) %in% c(2:6),"Weekday","Weekend")
pa1.i2$day<-as.factor(as.character(pa1.i2$day))
pa4<-aggregate(pa1.i2$steps, by=list(pa1.i2$interval,pa1.i2$day), FUN=mean)
qplot(Group.1,x,data=pa4, geom="line",facets = Group.2~., main="Daily activity pattern", xlab="Interval", ylab="Number of steps")
pa1.i2$TF<-wday(pa1.i2$date)
View(pa1.i2)
qplot(data=pa4, aes(Group.1,x), facets = Group.2~., main="Daily activity pattern", xlab="Interval", ylab="Number of steps")+geom="line"
View(pa4)
View(pa4)
qplot(data=pa4, aes("Number of steps", "interval"), facets = Group.2~., main="Daily activity pattern", xlab="Interval", ylab="Number of steps")+geom="line"
pa4<-aggregate(pa1.i2$steps, by=list(pa1.i2$interval,pa1.i2$day), FUN=mean)
colnames(pa4)<-c("Interval", "day", "Number of steps")
qplot(data=pa4, aes("Number of steps", "interval"), facets = day~., main="Daily activity pattern", xlab="Interval", ylab="Number of steps")+geom="line"
View(pa4)
qplot(data=pa4, aes("Number of steps", "interval"), facets = "day"~., main="Daily activity pattern", xlab="Interval", ylab="Number of steps")+geom="line"
qplot(data=pa4, aes("Number of steps", "interval"), facets = "day"~., main="Daily activity pattern", xlab="Interval", ylab="Number of steps")+geom="line"
qplot(data=pa4, aes("Number of steps", "interval"), facets = "day"~., main="Daily activity pattern", xlab="Interval", ylab="Number of steps",geom="line")
qplot(data=pa4, aes("interval", "Number of steps"), facets = "day"~., main="Daily activity pattern", xlab="Interval", ylab="Number of steps",geom="line")
?plot
qplot("interval", "Number of steps", data = pa4, facets = "day"~., main="Daily activity pattern",geom="line")
View(pa4)
?Qplot
?qplot
qplot("interval", "Number of steps", data = pa4, facets = "day"~.,geom="line", main="Daily activity pattern")
qplot("interval", "Number of steps", data = pa4, facets = "day"~,geom="line", main="Daily activity pattern")
qplot("interval", "Number of steps", data = pa4, facets = day~.,geom="line", main="Daily activity pattern")
View(pa4)
qplot(x="interval",Y="Number of steps", data = pa4, facets = day~.,geom="line", main="Daily activity pattern")
qplot(x="interval",y="Number of steps", data = pa4, facets = day~.,geom="line", main="Daily activity pattern")
qplot(x="interval",y="Number_of_steps", data = pa4, facets = day~.,geom="line", main="Daily activity pattern")
colnames(pa4)<-c("Interval", "day", "Number_of_steps")
qplot(pa4$interval",pa4$Number_of_steps, data = pa4, facets = day~.,geom="line", main="Daily activity pattern")
qplot(pa4$Interval",pa4$Number_of_steps, data = pa4, facets = day~.,geom="line", main="Daily activity pattern")
qplot(pa4$Interval,pa4$Number_of_steps, data = pa4, facets = day~.,geom="line", main="Daily activity pattern")
qplot
?qplot
?ggplot
ggplot(data=pa4, aes(pa4$Interval,pa4$Number_of_steps, facets=day~.),geom="line", main="Daily activity pattern")
ggplot(data=pa4, aes(Interval,Number_of_steps, facets=day~.),geom="line", main="Daily activity pattern")
?ggplot
?facets
ggplot(data=pa4, aes(Interval,Number_of_steps, facets=day~.))+geom_line+ ggtitle="Daily activity pattern"
ggplot(data=pa4, aes(Interval,Number_of_steps, facets=day~.))+geom_line()+ ggtitle="Daily activity pattern"
ggplot(data=pa4, aes(Interval,Number_of_steps, facets=day~.), geom_line)+ ggtitle="Daily activity pattern"
ggplot(data=pa4, aes(Interval,Number_of_steps, facets=day~), geom_line)+ ggtitle="Daily activity pattern"
ggplot(data=pa4, aes(Interval,Number_of_steps), facets=day~., geom_line)+ ggtitle="Daily activity pattern"
ggplot(data=pa4, aes(Interval,Number_of_steps), facets=day~., geom_line, ggtitle="Daily activity pattern")
ggplot(data=pa4, aes(Interval,Number_of_steps, facets=day~.), geom_line, ggtitle="Daily activity pattern")
ggplot(data=pa4, aes(Interval,Number_of_steps, facets=day), geom_line, ggtitle="Daily activity pattern")
ggplot(data=pa4, aes(Interval,Number_of_steps, facets=day), geom_line(Weekday), ggtitle="Daily activity pattern")
qplot(pa4$Interval,pa4$Number_of_steps, facets = pa4$day, type ="line")
qplot(pa4$Interval,pa4$Number_of_steps, facets = pa4$day~., type ="line")
View(pa4)
qplot(pa4$Interval,pa4$Number_of_steps, facets = pa4$day~., geom = "line")
View(pa4)
qplot(pa4$Interval,pa4$Number_of_steps, facets = day~., geom = "line")
pa4<-aggregate(pa1.i2$steps, by=list(pa1.i2$interval,pa1.i2$day), FUN=mean)
colnames(pa4)<-c("Interval", "day", "Number_of_steps")
qplot(pa4$Interval,pa4$Number_of_steps, facets = day~., geom = "line")
qplot(pa4$Interval,pa4$Number_of_steps, facets = "day"~., geom = "line")
qplot("Interval","Number_of_steps", facets = "day"~., geom = "line")
qplot(Interval,Number_of_steps, facets = "day"~., geom = "line")
```{r setup, include=FALSE}
